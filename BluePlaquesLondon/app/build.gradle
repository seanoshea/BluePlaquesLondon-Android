buildscript {
    repositories {
        maven { url "https://maven.fabric.io/public" }
    }

    dependencies {
        classpath "io.fabric.tools:gradle:1.21.6"
    }
}
apply plugin: "com.android.application"
apply plugin: "io.fabric"
repositories {
    maven { url "https://maven.fabric.io/public" }
}
apply plugin: "pmd"
apply plugin: "findbugs"

android {
    signingConfigs {
        //noinspection GroovyMissingReturnStatement
        config {
        }
        production {
            keyAlias "production"
            keyPassword "password_here"
            storeFile file("~/production.keystore")
            storePassword "password_here"
        }
    }
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    lintOptions {
        abortOnError false
        lintConfig file("${project.rootDir}/config/lint/lint.xml")
        htmlReport true
        htmlOutput file("$project.buildDir/reports/lint/lint.html")
    }
    defaultConfig {
        applicationId "com.upwardsnorthwards.blueplaqueslondon"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 16
        versionName "2.2"
        multiDexEnabled true
        testInstrumentationRunner "com.android.test.runner.MultiDexTestRunner"
        //noinspection GroovyAssignabilityCheck
        signingConfig signingConfigs.config
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            //noinspection GroovyAssignabilityCheck
            signingConfig signingConfigs.production
        }
    }
    productFlavors {
    }
}

task pmd(type: Pmd, dependsOn: "assembleDebug") {
    ruleSetFiles = files("${project.rootDir}/config/pmd/pmd-ruleset.xml")
    ignoreFailures = false
    ruleSets = []

    source "src"
    include "**/*.java"
    exclude "**/gen/**"

    reports {
        xml.enabled = false
        html.enabled = true
        //noinspection GroovyAssignabilityCheck
        xml {
            destination "$project.buildDir/reports/pmd/pmd.xml"
        }
        html {
            destination "$project.buildDir/reports/pmd/pmd.html"
        }
    }
}

task findbugs(type: FindBugs) {
    ignoreFailures = false
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("${project.rootDir}/config/findbugs/findbugs-filter.xml")
    classes = files("${project.rootDir}/app/build/intermediates/classes")

    source "src"
    include "**/*.java"
    exclude "**/gen/**"

    reports {
        xml.enabled = false
        html.enabled = true
        //noinspection GroovyAssignabilityCheck
        xml {
            destination "$project.buildDir/reports/findbugs/findbugs.xml"
        }
        html {
            destination "$project.buildDir/reports/findbugs/findbugs.html"
        }
    }

    classpath = files()
}

check.doLast {
    project.tasks.getByName("pmd").execute()
    project.tasks.getByName("findbugs").execute()
}

dependencies {
    ext.googlePlayServicesVersion = "10.2.1"
    ext.androidBuildToolsVersion = "25.0.0"
    compile fileTree(dir: "libs", include: ["*.jar"])
    debugCompile "com.squareup.leakcanary:leakcanary-android:1.5"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:1.5"
    compile("com.crashlytics.sdk.android:crashlytics:2.6.7@aar") {
        transitive = true;
    }
    compile "com.android.support:appcompat-v7:$androidBuildToolsVersion"
    compile "com.google.android.gms:play-services:$googlePlayServicesVersion"
    compile "com.github.hotchemi:android-rate:1.0.1"
    compile "com.squareup:otto:1.3.8"
    compile "com.android.support:support-annotations:$androidBuildToolsVersion"
    compile "com.google.android.gms:play-services-ads:$googlePlayServicesVersion"
    compile "com.google.android.gms:play-services-auth:$googlePlayServicesVersion"
    compile "com.google.android.gms:play-services-gcm:$googlePlayServicesVersion"
    compile "com.android.support:multidex:1.0.1"
}
